version: 2.1

jobs:
  policy-validation:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      
      - run:
          name: Install OPA
          command: |
            curl -L -o opa https://openpolicyagent.org/downloads/v0.58.0/opa_linux_amd64_static
            chmod +x opa
            sudo mv opa /usr/local/bin/
      
      - run:
          name: Test OPA Policies
          command: |
            echo "Running OPA policy tests..."
            opa test policies/ tests/
            echo "Policy tests completed successfully!"
      
      - run:
          name: Validate Sample Resource
          command: |
            # Create a sample S3 bucket configuration (compliant)
            cat > compliant-s3.json \<< 'JSON'
            {
              "resource_type": "aws_s3_bucket",
              "server_side_encryption_configuration": {
                "rule": {
                  "apply_server_side_encryption_by_default": {
                    "sse_algorithm": "AES256"
                  }
                }
              }
            }
            JSON
            
            # Test compliant resource
            echo "Testing compliant S3 bucket..."
            RESULT=$(opa eval -d policies/ -i compliant-s3.json "data.aws.s3.security.deny[x]")
            if [ "$RESULT" = "[]" ]; then
              echo "✅ Compliant resource passed validation"
            else
              echo "❌ Compliant resource failed: $RESULT"
              exit 1
            fi
            
            # Create a non-compliant S3 bucket configuration
            cat > non-compliant-s3.json \<< 'JSON'
            {
              "resource_type": "aws_s3_bucket",
              "acl": "public-read"
            }
            JSON
            
            # Test non-compliant resource
            echo "Testing non-compliant S3 bucket..."
            VIOLATIONS=$(opa eval -d policies/ -i non-compliant-s3.json "data.aws.s3.security.deny[x]")
            if [ "$VIOLATIONS" != "[]" ]; then
              echo "✅ Non-compliant resource correctly flagged:"
              echo "$VIOLATIONS" | jq .
            else
              echo "❌ Non-compliant resource should have been flagged"
              exit 1
            fi

  test-aws-connection:
    docker:
      - image: cimg/base:stable
    environment:
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - checkout
      
      - run:
          name: Install AWS CLI
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      
      - run:
          name: Configure OIDC and Test
          command: |
            export AWS_ROLE_ARN="arn:aws:iam::645343160353:role/CircleCILabRole"
            export AWS_WEB_IDENTITY_TOKEN_FILE="/tmp/web-identity-token"
            echo $CIRCLE_OIDC_TOKEN > $AWS_WEB_IDENTITY_TOKEN_FILE
            
            echo "Testing AWS connection..."
            aws sts get-caller-identity
            echo "AWS connection successful!"

workflows:
  security-pipeline:
    jobs:
      - policy-validation
      - test-aws-connection:
          requires:
            - policy-validation
